
import os
import requests
import json
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# Environment Variables ‡§∏‡•á API Keys ‡§≤‡•á‡§Ç
TELEGRAM_API_KEY = os.environ.get("TELEGRAM_API_KEY")
OPENROUTER_API_KEY = os.environ.get("OPENROUTER_API_KEY")

# ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text('‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç GROK-3 AI ‡§¨‡•ã‡§ü ‡§π‡•Ç‡§Å, ‡§Ü‡§™ ‡§Æ‡•Å‡§ù‡§∏‡•á ‡§ï‡•Å‡§õ ‡§≠‡•Ä ‡§™‡•Ç‡§õ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç! ü§ñ')

# ‡§Ø‡•Ç‡§ú‡§∞ ‡§ï‡•á ‡§Æ‡•à‡§∏‡•á‡§ú ‡§ï‡•ã ‡§™‡•ç‡§∞‡•ã‡§∏‡•á‡§∏ ‡§ï‡§∞‡•á‡§Ç
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    try:
        user_message = update.message.text
        
        # GROK-3 API ‡§ï‡•ã ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç
        response = requests.post(
            url="https://openrouter.ai/api/v1/chat/completions",
            headers={
                "Authorization": f"Bearer {OPENROUTER_API_KEY}",
                "Content-Type": "application/json",
                "HTTP-Referer": "https://api.telegram.org",
                "X-Title": "Telegram Grok Bot"
            },
            data=json.dumps({
                "model": "x-ai/grok-3-beta",
                "messages": [{"role": "user", "content": user_message}]
            })
        
        # ‡§ú‡§µ‡§æ‡§¨ ‡§™‡§æ‡§è‡§Ç ‡§î‡§∞ ‡§≠‡•á‡§ú‡•á‡§Ç
        ai_response = response.json()['choices'][0]['message']['content']
        await update.message.reply_text(ai_response)
        
    except Exception as e:
        await update.message.reply_text(f'‚ö†Ô∏è ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø: {str(e)}')

# Telegram ‡§¨‡•ã‡§ü ‡§è‡§™‡•ç‡§≤‡§ø‡§ï‡•á‡§∂‡§® ‡§∏‡•á‡§ü‡§Ö‡§™ ‡§ï‡§∞‡•á‡§Ç
app = Application.builder().token(TELEGRAM_API_KEY).build()

# ‡§ï‡§Æ‡§æ‡§Ç‡§° ‡§î‡§∞ ‡§Æ‡•à‡§∏‡•á‡§ú ‡§π‡•à‡§Ç‡§°‡§≤‡§∞ ‡§ú‡•ã‡§°‡§º‡•á‡§Ç
app.add_handler(CommandHandler('start', start))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

# ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç
if __name__ == "__main__":
    print("‚úÖ ‡§¨‡•ã‡§ü ‡§ö‡§≤ ‡§∞‡§π‡§æ ‡§π‡•à...")
    app.run_polling()  # Polling ‡§Æ‡•á‡§•‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç
